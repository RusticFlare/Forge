{
  "name": "Forge",
  "tagline": "A live coding language for heavy metal",
  "body": "# Forge\r\nForge is a live coding language for generating heavy metal music. It is based on [Tidal](https://github.com/tidalcycles/Tidal) and built within [Sonic Pi](https://github.com/samaaron/sonic-pi).\r\n\r\n## To Use Forge\r\n1. [Download and install Sonic Pi](http://sonic-pi.net/ \"Download Sonic Pi\") (**_DON'T LAUNCH IT YET_**)\r\n2. [Download the ZIP of this repository](https://github.com/RusticFlare/Forge/archive/master.zip \"Download Forge\") and extract it into a suitable location (I extracted it into `C:\\Users\\James\\Documents\\Forge` so this is my `EXTRACTION_LOCATION`)\r\n3. Copy both folders in [`EXTRACTION_LOCATION\\vendor\\`](vendor/) into `PATH_TO\\Sonic Pi\\app\\server\\vendor\\` (for me this is `C:\\Program Files (x86)\\Sonic Pi\\app\\server\\vendor\\`)\r\n4. Launch Sonic Pi\r\n5. Copy the contents of [`EXTRACTION_LOCATION\\forge.rb`](forge.rb) into any Sonic Pi buffer\r\n6. Change `DIRECTORY = 'EXTRACTION_LOCATION'` on line 2 to the path of the folder you extracted in Step 2\r\n7. Run the buffer (**_This must be run every time Sonic Pi is opened_**)\r\n8. Get coding\r\n\r\n## Forge Examples\r\n* A simple repeating kick drum\r\n```ruby\r\nforge :drums, \"k\" # :drums is the name of the live_loop created\r\n```\r\n* A repeating kick then snare\r\n```ruby\r\nforge :drums, \"k s\" # Listed items are played one after the other\r\n```\r\n* A repeating kick and snare\r\n```ruby\r\nforge :drums, \"[k, s]\" # Arrayed items are played simultaneously\r\n```\r\n* These can be combined in anyway\r\n```ruby\r\nforge :drums, \"[k k k, cc] [s [s s]]\"\r\n```\r\n* `~` can be used for silence\r\n```ruby\r\nforge :drums, \"~\" # This is an empty loop \r\n```\r\n* You can define multiple loops\r\n```ruby\r\nforge :guitar, \"45 49 47 45\" # Numbers refer to guitar notes\r\nforge :drums, \"[k k,s]\"\r\n```\r\n### Additional features\r\nSeveral shortcuts exist in Forge to make live-coding easier\r\n\r\n* `*` can be used to repeat a sound. `\"k*3\"` is the same as `\"k k k\"`\r\n* You can spread sounds over intervals using something of the form `\"k(3,5)\"` - here 3 kick drums are spread evenly over 5 beats, so it is equal to `\"k ~ k ~ k\"`\r\n* `/` will cause a sound to last longer. For example in `\"45/3\"` the note will last 3 times longer than the note in `\"45\"`\r\n* It is also possibe to define your own sounds in Sonic Pi and call them in Forge. This is done as a function that is evaluated in Forge:\r\n```ruby\r\n# Define your sound as an argumentless function\r\ndefine :a_chord do\r\n  play 45\r\n  play 47\r\n  play 50\r\nend\r\n\r\nforge :guitar, \"a_chord\" # Call the function in Forge\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}